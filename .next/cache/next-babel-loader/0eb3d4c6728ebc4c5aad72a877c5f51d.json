{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Container from '@material-ui/core/Container';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Scrollspy from 'react-scrollspy';\nimport logo from '~/static/images/profile-logo.png';\nimport { withTranslation } from '~/i18n';\nimport useStyles from './sidenav-style';\nimport navMenu from './menu';\nimport '~/vendors/hamburger-menu.css';\nvar counter = 0;\n\nfunction createData(name, url, offset) {\n  counter += 1;\n  return {\n    id: counter,\n    name: name,\n    url: url,\n    offset: offset\n  };\n}\n\nfunction SideNavigation(props) {\n  var classes = useStyles();\n  var t = props.t;\n\n  var _useState = useState([createData(navMenu[0], '#' + navMenu[0], 0), createData(navMenu[1], '#' + navMenu[1], 80), createData(navMenu[2], '#' + navMenu[2], -250), createData(navMenu[3], '#' + navMenu[3]), createData(navMenu[4], '#' + navMenu[4]), createData(navMenu[5], '#' + navMenu[5]), createData(navMenu[6], '#' + navMenu[6])]),\n      _useState2 = _slicedToArray(_useState, 1),\n      menuList = _useState2[0];\n\n  return React.createElement(\"div\", {\n    className: classes.navigation\n  }, React.createElement(Container, {\n    fixed: true\n  }, React.createElement(\"nav\", {\n    className: classes.navMenu\n  }, React.createElement(AnchorLink, {\n    href: \"#home\",\n    className: classes.logo\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\"\n  })), React.createElement(List, {\n    component: \"nav\",\n    className: classes.menu\n  }, React.createElement(Scrollspy, {\n    items: navMenu,\n    currentClassName: \"active\"\n  }, menuList.map(function (item) {\n    return React.createElement(ListItem, {\n      key: item.id.toString(),\n      button: true,\n      component: AnchorLink,\n      offset: item.offset || 0,\n      href: item.url,\n      classes: {\n        root: classes.link\n      }\n    }, React.createElement(ListItemText, {\n      classes: {\n        root: classes.text\n      },\n      primary: t('profile-landing:header_' + item.name)\n    }));\n  }))))));\n}\n\nSideNavigation.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['profile-landing'])(SideNavigation);","map":{"version":3,"sources":["/home/sean.droke/Development/seandroke.com/components/SideNavigation/SideNavigation.js"],"names":["React","useState","PropTypes","List","ListItem","ListItemText","Container","AnchorLink","Scrollspy","logo","withTranslation","useStyles","navMenu","counter","createData","name","url","offset","id","SideNavigation","props","classes","t","menuList","navigation","menu","map","item","toString","root","link","text","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Container from '@material-ui/core/Container';\r\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\r\nimport Scrollspy from 'react-scrollspy';\r\nimport logo from '~/static/images/profile-logo.png';\r\nimport { withTranslation } from '~/i18n';\r\nimport useStyles from './sidenav-style';\r\nimport navMenu from './menu';\r\nimport '~/vendors/hamburger-menu.css';\r\n\r\nlet counter = 0;\r\nfunction createData(name, url, offset) {\r\n  counter += 1;\r\n  return {\r\n    id: counter,\r\n    name,\r\n    url,\r\n    offset,\r\n  };\r\n}\r\n\r\nfunction SideNavigation(props) {\r\n  const classes = useStyles();\r\n  const { t } = props;\r\n  const [menuList] = useState([\r\n    createData(navMenu[0], '#' + navMenu[0], 0),\r\n    createData(navMenu[1], '#' + navMenu[1], 80),\r\n    createData(navMenu[2], '#' + navMenu[2], -250),\r\n    createData(navMenu[3], '#' + navMenu[3]),\r\n    createData(navMenu[4], '#' + navMenu[4]),\r\n    createData(navMenu[5], '#' + navMenu[5]),\r\n    createData(navMenu[6], '#' + navMenu[6]),\r\n  ]);\r\n  return (\r\n    <div className={classes.navigation}>\r\n      <Container fixed>\r\n        <nav className={classes.navMenu}>\r\n          <AnchorLink href=\"#home\" className={classes.logo}>\r\n            <img src={logo} alt=\"logo\" />\r\n          </AnchorLink>\r\n          <List component=\"nav\" className={classes.menu}>\r\n            <Scrollspy\r\n              items={navMenu}\r\n              currentClassName=\"active\"\r\n            >\r\n              {menuList.map(item => (\r\n                <ListItem\r\n                  key={item.id.toString()}\r\n                  button\r\n                  component={AnchorLink}\r\n                  offset={item.offset || 0}\r\n                  href={item.url}\r\n                  classes={{ root: classes.link }}\r\n                >\r\n                  <ListItemText\r\n                    classes={{ root: classes.text }}\r\n                    primary={t('profile-landing:header_' + item.name)}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </Scrollspy>\r\n          </List>\r\n        </nav>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nSideNavigation.propTypes = {\r\n  t: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation(['profile-landing'])(SideNavigation);\r\n"]},"metadata":{},"sourceType":"module"}