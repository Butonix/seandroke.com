{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Fab from '@material-ui/core/Fab';\nimport ArrowIcon from '@material-ui/icons/ArrowUpward';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useStyles from './pagenav-style';\nvar LinkBtn = React.forwardRef(function LinkBtn(props, ref) {\n  // eslint-disable-line\n  return React.createElement(AnchorLink, _extends({\n    to: props.to\n  }, props)); // eslint-disable-line\n});\n\nfunction PageNav(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var flagShow = false;\n\n  var handleScroll = function handleScroll() {\n    var doc = document.documentElement;\n    var scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    var newFlagShow = scroll > 500;\n\n    if (flagShow !== newFlagShow) {\n      setShow(newFlagShow);\n      flagShow = newFlagShow;\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    console.log();\n  }, []);\n  var classes = useStyles();\n  return React.createElement(\"div\", {\n    className: clsx(classes.pageNav, show && classes.show)\n  }, React.createElement(Tooltip, {\n    title: \"To Top\",\n    placement: \"left\",\n    classes: {\n      tooltip: classes.tooltip\n    }\n  }, React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"To top\",\n    component: LinkBtn,\n    href: \"#home\",\n    className: classes.fab\n  }, React.createElement(ArrowIcon, null))));\n}\n\nPageNav.propTypes = {};\nexport default PageNav;","map":{"version":3,"sources":["/home/sean.droke/Development/seandroke.com/components/PageNav/PageNav.js"],"names":["React","useState","useEffect","PropTypes","clsx","AnchorLink","Fab","ArrowIcon","Tooltip","useStyles","LinkBtn","forwardRef","props","ref","to","PageNav","show","setShow","flagShow","handleScroll","doc","document","documentElement","scroll","window","pageYOffset","scrollTop","clientTop","newFlagShow","addEventListener","console","log","classes","pageNav","tooltip","fab","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,IAAMC,OAAO,GAAGV,KAAK,CAACW,UAAN,CAAiB,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,GAAxB,EAA6B;AAAE;AAC9D,SAAO,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAED,KAAK,CAACE;AAAtB,KAA8BF,KAA9B,EAAP,CAD4D,CACZ;AACjD,CAFe,CAAhB;;AAIA,SAASG,OAAT,CAAiBH,KAAjB,EAAwB;AAAA,kBACEX,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACfe,IADe;AAAA,MACTC,OADS;;AAEtB,MAAIC,QAAQ,GAAG,KAAf;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAMC,GAAG,GAAGC,QAAQ,CAACC,eAArB;AACA,QAAMC,MAAM,GAAG,CAACC,MAAM,CAACC,WAAP,IAAsBL,GAAG,CAACM,SAA3B,KAAyCN,GAAG,CAACO,SAAJ,IAAiB,CAA1D,CAAf;AACA,QAAMC,WAAW,GAAIL,MAAM,GAAG,GAA9B;;AACA,QAAIL,QAAQ,KAAKU,WAAjB,EAA8B;AAC5BX,MAAAA,OAAO,CAACW,WAAD,CAAP;AACAV,MAAAA,QAAQ,GAAGU,WAAX;AACD;AACF,GARD;;AASA1B,EAAAA,SAAS,CAAC,YAAM;AACdsB,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCV,YAAlC;AACAW,IAAAA,OAAO,CAACC,GAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,MAAMC,OAAO,GAAGvB,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEL,IAAI,CAAC4B,OAAO,CAACC,OAAT,EAAkBjB,IAAI,IAAIgB,OAAO,CAAChB,IAAlC;AAApB,KACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAE;AACPkB,MAAAA,OAAO,EAAEF,OAAO,CAACE;AADV;AAHX,KAOE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,kBAAW,QAFb;AAGE,IAAA,SAAS,EAAExB,OAHb;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,SAAS,EAAEsB,OAAO,CAACG;AALrB,KAOE,oBAAC,SAAD,OAPF,CAPF,CADF,CADF;AAqBD;;AAEDpB,OAAO,CAACqB,SAAR,GAAoB,EAApB;AAGA,eAAerB,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ArrowIcon from '@material-ui/icons/ArrowUpward';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport useStyles from './pagenav-style';\r\n\r\nconst LinkBtn = React.forwardRef(function LinkBtn(props, ref) { // eslint-disable-line\r\n  return <AnchorLink to={props.to} {...props} />; // eslint-disable-line\r\n});\r\n\r\nfunction PageNav(props) {\r\n  const [show, setShow] = useState(false);\r\n  let flagShow = false;\r\n\r\n  const handleScroll = () => {\r\n    const doc = document.documentElement;\r\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    const newFlagShow = (scroll > 500);\r\n    if (flagShow !== newFlagShow) {\r\n      setShow(newFlagShow);\r\n      flagShow = newFlagShow;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    console.log();\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.pageNav, show && classes.show)}>\r\n      <Tooltip\r\n        title=\"To Top\"\r\n        placement=\"left\"\r\n        classes={{\r\n          tooltip: classes.tooltip\r\n        }}\r\n      >\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"To top\"\r\n          component={LinkBtn}\r\n          href=\"#home\"\r\n          className={classes.fab}\r\n        >\r\n          <ArrowIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nPageNav.propTypes = {\r\n};\r\n\r\nexport default PageNav;\r\n"]},"metadata":{},"sourceType":"module"}