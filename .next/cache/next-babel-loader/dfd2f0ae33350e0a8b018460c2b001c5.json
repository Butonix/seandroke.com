{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Carousel from 'react-slick';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport clsx from 'clsx';\nimport { useText } from '../../theme/common';\nimport Title from '../Title';\nimport IconTextCard from '../Cards/IconText';\nimport useStyle from './projects-style';\nimport COMCAST from '../../static/images/comcast.png';\nimport TIERNEY from '../../static/images/tierney_logo.png';\nimport IPG from '../../static/images/ipg.png';\nimport Button from '@material-ui/core/Button';\nvar services = [{\n  icon: COMCAST,\n  name: 'Comcast',\n  desc: 'Full Stack Software Engineer',\n  projectOverview: [{\n    projectNumber: 1,\n    projectName: 'Big Data Natural Language Parser',\n    projectDescription: 'Built a python parser for automating the identification of specific elements within a teradata database based on user defined parameters. Project involved optimizing existing queries to be as time/space efficient as possible on larger data sets (100TB+) as well as integrating results with a tensorflow based natural language processor to identify elements of relevant meaning with an acceptable degree of confidence.'\n  }, {\n    projectNumber: 2,\n    projectName: 'PySpark Translations',\n    projectDescription: 'Currently working on translating existing Hive SQL queries, used to aggregate data marts referenced by business facing web applications, to the PySpark/DataFrame syntax. PySpark enables for increased developer readability, advanced data science integration, and increased performance due to better optimized CI/CD.'\n  }]\n}, {\n  icon: TIERNEY,\n  name: 'Tierney Communications',\n  desc: 'Full Stack Developer',\n  projectOverview: [{\n    projectNumber: 1,\n    projectName: 'Development Practice Overhaul',\n    projectDescription: 'Promoted to assist in development of internal business process applications, customer facing full stack web projects, refactoring of the existing agency codebase, designing new coding standards, and leading an agile initiative. Day to day responsibilities included client facing site maintenance and feature implementation, working closely with project managers and product owners on new and existing business, and implementing new development strategies to increase personal and team productivity. Began an iteration of a better organized SDLC to redesign the agency website with a more capable back end interface with CMS integration.'\n  }]\n}, {\n  icon: COMCAST,\n  name: 'Comcast',\n  desc: 'Network & Automation Engineering Intern',\n  projectOverview: [{\n    projectNumber: 1,\n    projectName: 'Pre-Configuration Template Generator',\n    projectDescription: 'Built a full stack, React/Django, web application for automating template based, network device configuration file development. Created a user friendly form based UI to reduce errors made in the configuration process thereby reducing network outages and limiting necessary quality assurance.'\n  }, {\n    projectNumber: 2,\n    projectName: 'Multi-Device Change Deployment Tool',\n    projectDescription: 'Built an additional React/Django full stack web app to replace an internal tool used for automating the deployment of changes to multiple network devices at scale. Tool enables the internal change control team to automate company wide changes via a streamlined user interface thereby lessening engineer time spent and eliminating the pre-existing software sources of error.'\n  }]\n}, {\n  icon: IPG,\n  name: 'The Interpublic Group',\n  desc: 'Software Engineering Intern',\n  projectOverview: [{\n    projectNumber: 1,\n    projectName: 'Encrypted Device Reporting Tool',\n    projectDescription: 'Trained as a full stack developer working primarily on back end projects related to an internal IT Management and Reporting platform. Technology stack of JavaScript, PHP, SQL Server, and C/C++. Experience with the agile workflow, wireframing, test driven development, Unix based server manipulation, internal code standards, and design documentation. Notable contributions to back end PHP benefitting an Encrypted Device reporting tool for upper level administrators to oversee subsidiary compliance.'\n  }]\n}];\n\nfunction Projects(props) {\n  var classes = useStyle();\n  var text = useText();\n  var theme = useTheme();\n  var isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  var slider = useRef(null);\n  var settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    autoplay: false,\n    slidesToShow: 3,\n    arrows: false,\n    variableWidth: true,\n    pauseOnHover: true,\n    responsive: [{\n      breakpoint: 960,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 800,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggler = _useState2[0],\n      setToggler = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      renderContent = _useState4[0],\n      setRenderContent = _useState4[1];\n\n  var detailedWork = null;\n  useEffect(function () {\n    if (theme.direction === 'rtl') {\n      var lastSlide = Math.floor(services.length - 2);\n      slider.current.slickGoTo(lastSlide);\n    }\n  }, []);\n\n  if (toggler) {\n    detailedWork = React.createElement(\"div\", {\n      className: classes.SubInfo\n    }, renderContent.map(function (item, index) {\n      return React.createElement(\"div\", null, React.createElement(\"h3\", {\n        style: {\n          paddingTop: '5%'\n        },\n        className: text.subtitle2\n      }, React.createElement(\"b\", null, \"Project Name: \", React.createElement(\"i\", null, item.projectName))), React.createElement(\"p\", {\n        className: text.paragraph\n      }, item.projectDescription));\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(\"div\", {\n    className: classes.inBetween\n  }, React.createElement(\"div\", {\n    className: classes.floatingTitle\n  }, React.createElement(Title, null, React.createElement(\"strong\", null, \"Projects\")), React.createElement(Typography, {\n    className: text.paragraph\n  }, \"An overview of what I have accomplished at these great organizations.\")), React.createElement(\"div\", {\n    className: classes.sliderWrap\n  }, React.createElement(\"div\", {\n    className: classes.carousel\n  }, React.createElement(IconButton, {\n    className: clsx(classes.nav, classes.prev),\n    onClick: function onClick() {\n      return slider.current.slickPrev();\n    }\n  }, React.createElement(\"i\", {\n    className: \"ion-ios-arrow-back\"\n  })), React.createElement(Carousel, _extends({\n    ref: slider\n  }, settings), isDesktop && React.createElement(\"div\", {\n    className: clsx(classes.item, classes.itemPropsFirst)\n  }, React.createElement(\"div\", null)), services.map(function (item, index) {\n    return React.createElement(\"div\", {\n      key: index.toString(),\n      className: classes.item\n    }, React.createElement(\"div\", null, React.createElement(IconTextCard, {\n      icon: item.icon,\n      text: item.name,\n      desc: item.desc\n    })), React.createElement(\"div\", {\n      className: classes.CenterButton\n    }, React.createElement(Button, {\n      onClick: function onClick() {\n        setToggler(!toggler);\n        setRenderContent(item.projectOverview);\n      }\n    }, \"Read More\")));\n  }), isDesktop && React.createElement(\"div\", {\n    className: clsx(classes.item, classes.itemPropsLast)\n  }, React.createElement(\"div\", null))), React.createElement(IconButton, {\n    className: clsx(classes.nav, classes.next),\n    onClick: function onClick() {\n      return slider.current.slickNext();\n    }\n  }, React.createElement(\"i\", {\n    className: \"ion-ios-arrow-forward\"\n  })))), React.createElement(\"div\", null, detailedWork)));\n}\n\nProjects.propTypes = {};\nexport default Projects;","map":{"version":3,"sources":["/home/sean.droke/Development/seandroke.com/components/Projects/Projects.js"],"names":["React","useRef","useEffect","useState","useMediaQuery","useTheme","Carousel","Typography","IconButton","clsx","useText","Title","IconTextCard","useStyle","COMCAST","TIERNEY","IPG","Button","services","icon","name","desc","projectOverview","projectNumber","projectName","projectDescription","Projects","props","classes","text","theme","isDesktop","breakpoints","up","slider","settings","dots","infinite","speed","autoplay","slidesToShow","arrows","variableWidth","pauseOnHover","responsive","breakpoint","slidesToScroll","toggler","setToggler","renderContent","setRenderContent","detailedWork","direction","lastSlide","Math","floor","length","current","slickGoTo","SubInfo","map","item","index","paddingTop","subtitle2","paragraph","root","inBetween","floatingTitle","sliderWrap","carousel","nav","prev","slickPrev","itemPropsFirst","toString","CenterButton","itemPropsLast","next","slickNext","propTypes"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Carousel from 'react-slick';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport { useText } from '../../theme/common';\r\nimport Title from '../Title';\r\nimport IconTextCard from '../Cards/IconText';\r\nimport useStyle from './projects-style';\r\nimport COMCAST from '../../static/images/comcast.png';\r\nimport TIERNEY from '../../static/images/tierney_logo.png';\r\nimport IPG from '../../static/images/ipg.png';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst services = [\r\n  {\r\n    icon: COMCAST,\r\n    name: 'Comcast',\r\n    desc: 'Full Stack Software Engineer',\r\n    projectOverview: [{projectNumber: 1, projectName: 'Big Data Natural Language Parser', projectDescription: 'Built a python parser for automating the identification of specific elements within a teradata database based on user defined parameters. Project involved optimizing existing queries to be as time/space efficient as possible on larger data sets (100TB+) as well as integrating results with a tensorflow based natural language processor to identify elements of relevant meaning with an acceptable degree of confidence.'}, \r\n    {projectNumber: 2, projectName: 'PySpark Translations', projectDescription: 'Currently working on translating existing Hive SQL queries, used to aggregate data marts referenced by business facing web applications, to the PySpark/DataFrame syntax. PySpark enables for increased developer readability, advanced data science integration, and increased performance due to better optimized CI/CD.'}]\r\n  },\r\n  {\r\n    icon: TIERNEY,\r\n    name: 'Tierney Communications',\r\n    desc: 'Full Stack Developer',\r\n    projectOverview: [{projectNumber: 1, projectName: 'Development Practice Overhaul', projectDescription: 'Promoted to assist in development of internal business process applications, customer facing full stack web projects, refactoring of the existing agency codebase, designing new coding standards, and leading an agile initiative. Day to day responsibilities included client facing site maintenance and feature implementation, working closely with project managers and product owners on new and existing business, and implementing new development strategies to increase personal and team productivity. Began an iteration of a better organized SDLC to redesign the agency website with a more capable back end interface with CMS integration.'},]\r\n  },\r\n  {\r\n    icon: COMCAST,\r\n    name: 'Comcast',\r\n    desc: 'Network & Automation Engineering Intern',\r\n    projectOverview: [{projectNumber: 1, projectName: 'Pre-Configuration Template Generator', projectDescription: 'Built a full stack, React/Django, web application for automating template based, network device configuration file development. Created a user friendly form based UI to reduce errors made in the configuration process thereby reducing network outages and limiting necessary quality assurance.'}, \r\n    {projectNumber: 2, projectName: 'Multi-Device Change Deployment Tool', projectDescription: 'Built an additional React/Django full stack web app to replace an internal tool used for automating the deployment of changes to multiple network devices at scale. Tool enables the internal change control team to automate company wide changes via a streamlined user interface thereby lessening engineer time spent and eliminating the pre-existing software sources of error.'}]\r\n  },\r\n  {\r\n    icon: IPG,\r\n    name: 'The Interpublic Group',\r\n    desc: 'Software Engineering Intern',\r\n    projectOverview: [{projectNumber: 1, projectName: 'Encrypted Device Reporting Tool', projectDescription: 'Trained as a full stack developer working primarily on back end projects related to an internal IT Management and Reporting platform. Technology stack of JavaScript, PHP, SQL Server, and C/C++. Experience with the agile workflow, wireframing, test driven development, Unix based server manipulation, internal code standards, and design documentation. Notable contributions to back end PHP benefitting an Encrypted Device reporting tool for upper level administrators to oversee subsidiary compliance.'},]\r\n  }\r\n];\r\n\r\nfunction Projects(props) {\r\n  const classes = useStyle();\r\n  const text = useText();\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n  const slider = useRef(null);\r\n  const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    speed: 500,\r\n    autoplay: false,\r\n    slidesToShow: 3,\r\n    arrows: false,\r\n    variableWidth: true,\r\n    pauseOnHover: true,\r\n    responsive: [{\r\n      breakpoint: 960,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1\r\n      }\r\n    }, {\r\n      breakpoint: 800,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 1\r\n      }\r\n    }, {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      }\r\n    }]\r\n  };\r\n\r\n  const [toggler, setToggler] = useState(false);\r\n  const [renderContent, setRenderContent] = useState(null);\r\n\r\n  let detailedWork = null;\r\n\r\n  useEffect(() => {\r\n    if (theme.direction === 'rtl') {\r\n      const lastSlide = Math.floor(services.length - 2);\r\n      slider.current.slickGoTo(lastSlide);\r\n    }\r\n  }, []);\r\n\r\n  if(toggler) {\r\n    detailedWork = (<div className={classes.SubInfo}>{renderContent.map((item, index) => (\r\n    <div>\r\n      <h3 style={{paddingTop: '5%'}} className={text.subtitle2}><b>Project Name: <i>{item.projectName}</i></b></h3>\r\n      <p className={text.paragraph}>{item.projectDescription}</p>\r\n    </div>))}</div>)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.inBetween}>\r\n      <div className={classes.floatingTitle}>\r\n        <Title>\r\n          <strong>\r\n            Projects\r\n          </strong>\r\n        </Title>\r\n        <Typography className={text.paragraph}>\r\n          An overview of what I have accomplished at these great organizations.\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.sliderWrap}>\r\n        <div className={classes.carousel}>\r\n          <IconButton\r\n            className={clsx(classes.nav, classes.prev)}\r\n            onClick={() => slider.current.slickPrev()}\r\n          >\r\n            <i className=\"ion-ios-arrow-back\" />\r\n          </IconButton>\r\n          <Carousel ref={slider} {...settings}>\r\n            {isDesktop && (\r\n              <div className={clsx(classes.item, classes.itemPropsFirst)}>\r\n                <div />\r\n              </div>\r\n            )}\r\n            {services.map((item, index) => (\r\n              <div key={index.toString()} className={classes.item}>\r\n                <div>\r\n                <IconTextCard\r\n                  icon={item.icon}\r\n                  text={item.name}\r\n                  desc={item.desc}\r\n                />\r\n                </div>\r\n                <div className={classes.CenterButton}>\r\n                  <Button onClick={() =>{setToggler(!toggler); setRenderContent(item.projectOverview);}}>Read More</Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {isDesktop && (\r\n              <div className={clsx(classes.item, classes.itemPropsLast)}>\r\n                <div />\r\n              </div>\r\n            )}\r\n          </Carousel>\r\n          <IconButton\r\n            className={clsx(classes.nav, classes.next)}\r\n            onClick={() => slider.current.slickNext()}\r\n          >\r\n            <i className=\"ion-ios-arrow-forward\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {detailedWork}\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nProjects.propTypes = {\r\n};\r\n\r\nexport default Projects;\r\n"]},"metadata":{},"sourceType":"module"}